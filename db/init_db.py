import sqlite3
import pathlib

SCHEMA_FILE = pathlib.Path(__file__).parent / "schema.sql"
DB_FILE = pathlib.Path(__file__).parent / "app.db"

def init_db():
    sql = SCHEMA_FILE.read_text()
    conn = sqlite3.connect(DB_FILE)
    cur = conn.cursor()
    cur.executescript(sql)
    # Добавим несколько продуктов demo, включая имена, которые использует фронтенд
    products = [
        # Genshin Impact
        (10, '6480 Кристаллов сотворения', 6400.0),
        (11, '3280 Кристаллов сотворения', 3280.0),
        (12, '1980 Кристаллов сотворения', 1980.0),
        (13, '980 Кристаллов сотворения', 980.0),
        (14, '300 Кристаллов сотворения', 300.0),
        (15, '60 Кристаллов сотворения', 60.0),
        (16, 'Благословение полой луны', 300.0),
        (17, 'Жемчужный гимн', 635.0),
        (18, 'Жемчужный хор', 1250.0),
    # Honkai: Star Rail (актуальные названия)
    (20, '6480 Сущности древних снов', 6400.0),
    (21, '3280 Сущности древних снов', 3280.0),
    (22, '1980 Сущности древних снов', 1980.0),
    (23, '980 Сущности древних снов', 980.0),
    (24, '300 Сущности древних снов', 300.0),
    (25, '60 Сущности древних снов', 60.0),
    (26, 'Пропуск снабжения экспресса', 300.0),
    (27, 'Слава Безымянных', 635.0),
    (28, 'Медаль Безымянных', 1250.0),
    # Zenless Zone Zero (актуальные названия)
    (30, '6480 Монохромов', 6400.0),
    (31, '3280 Монохромов', 3280.0),
    (32, '1980 Монохромов', 1980.0),
    (33, '980 Монохромов', 980.0),
    (34, '300 Монохромов', 300.0),
    (35, '60 Монохромов', 60.0),
    (36, 'Интернот-подписка', 300.0),
    (37, 'Фонд Риду: Продвинутый план', 635.0),
    (38, 'Фонд Риду: Премиальный план', 1250.0)
    ]
    # Удаляем все дублирующие и тестовые товары, оставляем только актуальные позиции
    for pid, name, price in products:
        cur.execute("INSERT OR IGNORE INTO products (id, name, price) VALUES (?, ?, ?)", (pid, name, price))
    conn.commit()
    conn.close()

if __name__ == '__main__':
    init_db()
    print('DB initialized at', DB_FILE)
